#--------------------------------------------
#   Name: Jugal Patel
#   ID:
#   CMPUT 274, Fall 2021
#
#   Weekly Exercise #4: Text Preprocessor
#--------------------------------------------
import sys


stopwords = ["i", "me", "my", "myself", "we", "our", "ours", "ourselves", "you", "your",
"yours", "yourself", "yourselves", "he", "him", "his", "himself", "she", "her",
"hers", "herself", "it", "its", "itself", "they", "them", "their", "theirs",
"themselves", "what", "which","who", "whom", "this", "that", "these", "those",
"am", "is", "are", "was", "were", "be","been", "being", "have", "has", "had",
"having", "do", "does", "did", "doing", "a", "an","the", "and", "but", "if",
"or", "because", "as", "until", "while", "of", "at", "by", "for", "with",
"about", "against", "between", "into", "through", "during", "before", "after",
"above", "below", "to", "from", "up", "down", "in", "out", "on", "off", "over",
"under", "again", "further", "then", "once", "here", "there", "when", "where",
"why", "how", "all", "any", "both", "each", "few", "more", "most", "other",
"some", "such", "no", "nor", "not", "only", "own", "same", "so", "than",
"too", "very", "s", "t", "can", "will", "just", "don", "should", "now"]
numbers = ["1", "2", "3", "4", "5", "6", "7", "8","9","0"]
letters = ["a", "b", "c", "d", "e", "f", "g", "h", "i","j","k", "l", "m", "n",
         "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]

def rem_stop(x):
    xl = x.split()
    i = 0
    x = []
    while i < len(xl):
        if xl[i] not in stopwords:
            x.append(xl[i])
            i = i + 1
        else:
            i = i + 1
    x = " ".join(x)
    return x

def rem_symbols(x):
    xl = x.split()
    xl = "".join(xl)
    j = 0
    while j < len(xl):
        if (xl[j] not in numbers) and (xl[j] not in letters):
            x = x.replace(xl[j], "")
            j = j + 1
        else:
            j = j + 1
    x = x.split()
    x = " ".join(x)
    return x

def rem_numbers(x):
    xl = x.split()
    k = 0
    l = 0
    x = []
    while k < len(xl):
        s = xl[k]
        r = s
        if s.isdigit() == True:
            k = k + 1
            x.append(s)
        else:
            while l < len(s):
                if s[l] in numbers:
                    r = r.replace(s[l], "")
                    l = l + 1
                else:
                    l = l + 1
            x.append(r)
            k = k + 1
            l = 0
    x = " ".join(x)
    return x

user = sys.argv
if len(user) > 2:
    print("Incorrect mode, Usage python3 preprocess.py <mode>")
    print("Avaliable modes: 'keep-digits', 'keep-stops', 'keep-symbols'")
    exit()
elif len(user) == 2:
    mode = sys.argv[1]
    if mode == "keep-digits":
        x = input()
        x = x.lower()
        x = rem_stop(x)
        x = rem_symbols(x)
    elif mode == "keep-stops":
        x = input()
        x = x.lower()
        x = rem_symbols(x)
        x = rem_numbers(x)
    elif mode == "keep-symbols":
        x = input()
        x = x.lower()
        x = rem_numbers(x)
        x = rem_stop(x)
    else:
        print("Incorrect mode, Usage python3 preprocess.py <mode>")
        print("Avaliable modes: 'keep-digits', 'keep-stops', 'keep-symbols'")
        exit()  
elif len(user) == 1:
    x = input()
    x = x.lower()
    x = rem_symbols(x)
    x = rem_numbers(x)
    x = rem_stop(x)
print(x)

if __name__ == "__main__":
    pass
